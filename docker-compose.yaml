version: '3.8'

services:
  nginx:
    container_name: ${DOCKER_PROJECT_TITLE}-nginx
    restart: always
    build:
      context: ./docker/configs/dev
      dockerfile: nginx.docker
    volumes:
      - ./app:/app
    depends_on:
      - php-fpm
    ports:
      - "${DOCKER_NGINX_PORT}:80"
    networks:
      - app-network
  php-fpm:
    container_name: ${DOCKER_PROJECT_TITLE}-php-fpm
    restart: always
    build:
      context: ./docker/configs/dev
      dockerfile: php-fpm.docker
    volumes:
      - ./app:/app
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9009 idekey=PHPSTORM log_level=0"
      PHP_IDE_CONFIG: "serverName=Docker"
    networks:
      - app-network
  php-cli:
    container_name: ${DOCKER_PROJECT_TITLE}-php-cli
    restart: always
    build:
      context: ./docker/configs/dev
      dockerfile: php-cli.docker
    volumes:
      - ./app:/app
      - composer:/root/.composer/cache
      - ./docker/data/.composer/auth.json:/root/.composer/auth.json
    depends_on:
      mysql:
        condition: service_healthy
    tty: true
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9009 idekey=PHPSTORM log_level=0"
      PHP_IDE_CONFIG: "serverName=Docker"
    networks:
      - app-network
  mysql:
    container_name: ${DOCKER_PROJECT_TITLE}-mysql
    restart: always
    image: mysql:8
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DOCKER_MYSQL_DB_NAME:-app}
      MYSQL_USER: app
      MYSQL_PASSWORD: secret
    ports:
      - "${DOCKER_MYSQL_PORT:-3306}:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10

volumes:
  composer:
  postgres:
  mysql:

networks:
  app-network:
    name: app-network
    external: true
